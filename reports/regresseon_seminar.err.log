Traceback (most recent call last):
  File "/opt/anaconda3/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/anaconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np 
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.metrics import accuracy_score  
np.random.seed(0)
x = np.random.rand(100, 1)
y = 2 + 3 * x + np.random.rand(100, 1)
# Linear regression
# your code here
#.....
# n = len(x)
# sumy, sumx,sumxy,sumx2 = 0,0,0,0
# for i in range(0,n):
#     sumy = sumy + y[i]
#     sumx = sumx + x[i]
#     sumx2 = sumx2 + x[i]**2
#     sumxy = sumxy + y[i]*x[i] 
# sumxsumx,sumxsumy = 0,0
# for i in range(0,n):
#     sumxsumx = sumxsumx+x[i]*sumx
#     sumxsumy = sumxsumy+x[i]*sumy
# a = (sumxsumy/n - sumxy)/(sumxsumx/n - sumx2) 
# b = sumy/n - a*sumx/n
# coefs = np.array([a,b])
# y_predicted = a*x+b 

print("Estimated coefficients:\nb_0 = {} nb_1 = {}".format(coefs[0], coefs[1])) 
print(' mean squared error: ', mean_squared_error(y, y_predicted))
print('R2 score: ', r2_score(y, y_predicted))


plt.scatter(x, y, s=10)
plt.plot(x, y_predicted, color='r')
plt.xlabel('x')
plt.ylabel('y')
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[48], line 27[0m
[1;32m      7[0m y [38;5;241m=[39m [38;5;241m2[39m [38;5;241m+[39m [38;5;241m3[39m [38;5;241m*[39m x [38;5;241m+[39m np[38;5;241m.[39mrandom[38;5;241m.[39mrand([38;5;241m100[39m, [38;5;241m1[39m)
[1;32m      8[0m [38;5;66;03m# Linear regression[39;00m
[1;32m      9[0m [38;5;66;03m# your code here[39;00m
[1;32m     10[0m [38;5;66;03m#.....[39;00m
[0;32m   (...)[0m
[1;32m     24[0m [38;5;66;03m# coefs = np.array([a,b])[39;00m
[1;32m     25[0m [38;5;66;03m# y_predicted = a*x+b [39;00m
[0;32m---> 27[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mEstimated coefficients:[39m[38;5;130;01m\n[39;00m[38;5;124mb_0 = [39m[38;5;132;01m{}[39;00m[38;5;124m nb_1 = [39m[38;5;132;01m{}[39;00m[38;5;124m"[39m[38;5;241m.[39mformat([43mcoefs[49m[[38;5;241m0[39m], coefs[[38;5;241m1[39m])) 
[1;32m     28[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124m mean squared error: [39m[38;5;124m'[39m, mean_squared_error(y, y_predicted))
[1;32m     29[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mR2 score: [39m[38;5;124m'[39m, r2_score(y, y_predicted))

[0;31mNameError[0m: name 'coefs' is not defined
NameError: name 'coefs' is not defined

